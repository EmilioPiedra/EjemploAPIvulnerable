{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reale\\\\Desktop\\\\Ataques\\\\jwt-login-node\\\\frontend\\\\src\\\\components\\\\RecuperarContrasena.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RecuperarContrasena() {\n  _s();\n  const [usuario, setUsuario] = useState('');\n  const [otp, setOtp] = useState('');\n  const [nuevaPassword, setNuevaPassword] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const [otpSolicitado, setOtpSolicitado] = useState(false);\n  const solicitarOtp = async () => {\n    try {\n      const res = await fetch('http://localhost:4000/api/request-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usuario\n        })\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setMensaje(data.mensaje || 'OTP generado y enviado');\n        setOtpSolicitado(true); // mostrar formulario de OTP y contraseña\n      } else {\n        setMensaje(data.mensaje || 'Error al solicitar OTP');\n      }\n    } catch (error) {\n      setMensaje('Error en la conexión');\n    }\n  };\n  const verificarOtp = async () => {\n    try {\n      const res = await fetch('http://localhost:4000/api/verify-otp', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          usuario,\n          otp,\n          nuevaPassword\n        })\n      });\n      const data = await res.json();\n      if (res.ok && data.valido) {\n        setMensaje(data.mensaje || 'Contraseña cambiada con éxito');\n        // Resetear todo para nuevo ciclo\n        setOtpSolicitado(false);\n        setUsuario('');\n        setOtp('');\n        setNuevaPassword('');\n      } else {\n        setMensaje(data.mensaje || 'OTP inválido o error');\n      }\n    } catch (error) {\n      setMensaje('Error en la conexión');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 400,\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recuperar contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Usuario\",\n      value: usuario,\n      onChange: e => setUsuario(e.target.value),\n      style: {\n        width: '100%',\n        marginBottom: 8\n      },\n      disabled: otpSolicitado // opcional: bloquear usuario mientras se usa OTP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: solicitarOtp,\n      disabled: !usuario,\n      children: \"Solicitar OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), otpSolicitado && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"OTP recibido\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        style: {\n          width: '100%',\n          marginBottom: 8,\n          marginTop: 16\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Nueva contrase\\xF1a\",\n        value: nuevaPassword,\n        onChange: e => setNuevaPassword(e.target.value),\n        style: {\n          width: '100%',\n          marginBottom: 8\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: verificarOtp,\n        disabled: !otp || !nuevaPassword,\n        children: \"Verificar OTP y cambiar contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(RecuperarContrasena, \"WoSUk1g83iFKvMv7aRrzVO3/qO8=\");\n_c = RecuperarContrasena;\nvar _c;\n$RefreshReg$(_c, \"RecuperarContrasena\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","RecuperarContrasena","_s","usuario","setUsuario","otp","setOtp","nuevaPassword","setNuevaPassword","mensaje","setMensaje","otpSolicitado","setOtpSolicitado","solicitarOtp","res","fetch","method","headers","body","JSON","stringify","data","json","ok","error","verificarOtp","valido","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","width","marginBottom","disabled","onClick","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/reale/Desktop/Ataques/jwt-login-node/frontend/src/components/RecuperarContrasena.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function RecuperarContrasena() {\r\n  const [usuario, setUsuario] = useState('');\r\n  const [otp, setOtp] = useState('');\r\n  const [nuevaPassword, setNuevaPassword] = useState('');\r\n  const [mensaje, setMensaje] = useState('');\r\n  const [otpSolicitado, setOtpSolicitado] = useState(false);\r\n\r\n  const solicitarOtp = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:4000/api/request-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ usuario }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setMensaje(data.mensaje || 'OTP generado y enviado');\r\n        setOtpSolicitado(true); // mostrar formulario de OTP y contraseña\r\n      } else {\r\n        setMensaje(data.mensaje || 'Error al solicitar OTP');\r\n      }\r\n    } catch (error) {\r\n      setMensaje('Error en la conexión');\r\n    }\r\n  };\r\n\r\n  const verificarOtp = async () => {\r\n    try {\r\n      const res = await fetch('http://localhost:4000/api/verify-otp', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ usuario, otp, nuevaPassword }),\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok && data.valido) {\r\n        setMensaje(data.mensaje || 'Contraseña cambiada con éxito');\r\n        // Resetear todo para nuevo ciclo\r\n        setOtpSolicitado(false);\r\n        setUsuario('');\r\n        setOtp('');\r\n        setNuevaPassword('');\r\n      } else {\r\n        setMensaje(data.mensaje || 'OTP inválido o error');\r\n      }\r\n    } catch (error) {\r\n      setMensaje('Error en la conexión');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: 400, margin: 'auto' }}>\r\n      <h2>Recuperar contraseña</h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Usuario\"\r\n        value={usuario}\r\n        onChange={e => setUsuario(e.target.value)}\r\n        style={{ width: '100%', marginBottom: 8 }}\r\n        disabled={otpSolicitado} // opcional: bloquear usuario mientras se usa OTP\r\n      />\r\n\r\n      {/* Botón siempre visible para solicitar OTP */}\r\n      <button onClick={solicitarOtp} disabled={!usuario}>\r\n        Solicitar OTP\r\n      </button>\r\n\r\n      {/* Mostrar solo si OTP fue solicitado */}\r\n      {otpSolicitado && (\r\n        <>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"OTP recibido\"\r\n            value={otp}\r\n            onChange={e => setOtp(e.target.value)}\r\n            style={{ width: '100%', marginBottom: 8, marginTop: 16 }}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Nueva contraseña\"\r\n            value={nuevaPassword}\r\n            onChange={e => setNuevaPassword(e.target.value)}\r\n            style={{ width: '100%', marginBottom: 8 }}\r\n          />\r\n          <button onClick={verificarOtp} disabled={!otp || !nuevaPassword}>\r\n            Verificar OTP y cambiar contraseña\r\n          </button>\r\n        </>\r\n      )}\r\n\r\n      <p>{mensaje}</p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}