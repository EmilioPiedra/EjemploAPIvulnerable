{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reale\\\\Desktop\\\\Ataques\\\\jwt-login-node\\\\frontend\\\\src\\\\components\\\\Facturar.jsx\",\n  _s = $RefreshSig$();\n// src/components/Facturar.jsx\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Facturar = () => {\n  _s();\n  const [cedula, setCedula] = useState(\"\");\n  const [respuesta, setRespuesta] = useState(null);\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setRespuesta(null);\n    setError(\"\");\n    try {\n      // Simulación de llamada al servicio SOAP/XML (puedes cambiar esta parte con tu función real)\n      const result = await fetch(\"/api/verificar-antecedentes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          cedula\n        })\n      });\n      const data = await result.json();\n      if (result.ok) {\n        setRespuesta(data.estado);\n      } else {\n        setError(data.error || \"Error al consultar antecedentes\");\n      }\n    } catch (err) {\n      setError(\"No se pudo conectar con el servicio\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Facturar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"C\\xE9dula del cliente:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: cedula,\n          onChange: e => setCedula(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Validar antecedentes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), respuesta && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Resultado: \", respuesta]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Facturar, \"JxxsEGAZcCOQFkjVxO0NRILOEf0=\");\n_c = Facturar;\nexport default Facturar;\nvar _c;\n$RefreshReg$(_c, \"Facturar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Facturar","_s","cedula","setCedula","respuesta","setRespuesta","error","setError","handleSubmit","e","preventDefault","result","fetch","method","headers","body","JSON","stringify","data","json","ok","estado","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","style","color","_c","$RefreshReg$"],"sources":["C:/Users/reale/Desktop/Ataques/jwt-login-node/frontend/src/components/Facturar.jsx"],"sourcesContent":["// src/components/Facturar.jsx\r\nimport React, { useState } from \"react\";\r\n\r\nconst Facturar = () => {\r\n  const [cedula, setCedula] = useState(\"\");\r\n  const [respuesta, setRespuesta] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setRespuesta(null);\r\n    setError(\"\");\r\n\r\n    try {\r\n      // Simulación de llamada al servicio SOAP/XML (puedes cambiar esta parte con tu función real)\r\n      const result = await fetch(\"/api/verificar-antecedentes\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ cedula }),\r\n      });\r\n\r\n      const data = await result.json();\r\n      if (result.ok) {\r\n        setRespuesta(data.estado);\r\n      } else {\r\n        setError(data.error || \"Error al consultar antecedentes\");\r\n      }\r\n    } catch (err) {\r\n      setError(\"No se pudo conectar con el servicio\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Facturar</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Cédula del cliente:\r\n          <input\r\n            type=\"text\"\r\n            value={cedula}\r\n            onChange={(e) => setCedula(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Validar antecedentes</button>\r\n      </form>\r\n\r\n      {respuesta && <p>Resultado: {respuesta}</p>}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Facturar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}